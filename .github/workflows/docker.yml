name: Publish Docker Images

on:
  push:
    branches:
      - main

env:
  DOCKER_BUILD_PLATFORMS: linux/amd64
  RETH_FEATURES: jemalloc,asm-keccak
  RETH_BUILD_PROFILE: maxperf

jobs:
  docker_prep:
    name: Build and push docker image
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    strategy:
      matrix:
        network: [mainnet, sepolia]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker image
        id: docker-image
        run: |
          if [ "${{ matrix.network }}" = "mainnet" ];
          then
            echo "image=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}" >> $GITHUB_OUTPUT
          else
            echo "image=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_SEPOLIA }}" >> $GITHUB_OUTPUT
          fi

      - name: Apply Lisk Sepolia hotfix
        id: apply-sepolia-hotfix
        if: ${{ matrix.network == 'sepolia' }}
        run: git apply ./dockerfile-lisk-sepolia.patch

      - name: Build and push image
        uses: docker/build-push-action@v6
        id: docker-build
        with:
          context: .
          file: reth/Dockerfile
          build-args: |
            FEATURES=${{ env.RETH_FEATURES }}
            RETH_BUILD_PROFILE=${{ env.RETH_BUILD_PROFILE }}
          platforms: ${{ env.DOCKER_BUILD_PLATFORMS }}
          push: true
          tags: |
            ${{ steps.docker-image.outputs.image }}:latest
            ${{ steps.docker-image.outputs.image }}:${{ github.sha }}
