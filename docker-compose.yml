services:
  execution:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ${CLIENT}/Dockerfile
      args:
        PROFILE: ${RETH_BUILD_PROFILE:-maxperf}
    ports:
      - "8545:8545"       # RPC
      - "8546:8546"       # websocket
      - "7301:6060"       # metrics
    command: [ "bash", "./execution-entrypoint" ]
    volumes:
        - ${HOST_DATA_DIR}:/data
    healthcheck:
      test: ["CMD", "curl", "-sd", "{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"eth_chainId\",\"params\":[]}", "-H", "Content-Type: application/json", "http://execution:8545"]
      start_period: 5s
      interval: 1m
      timeout: 5s
      retries: 3
    env_file:
      - .env
      # select your network here:
      # - .env.sepolia
      - .env.mainnet

  node:
    platform: linux/amd64
    build:
      context: .
      dockerfile: ${CLIENT}/Dockerfile
      args:
        PROFILE: ${RETH_BUILD_PROFILE:-maxperf}
    depends_on:
      execution:
        condition: service_started
    ports:
      - "9545:9545"     # RPC
      - "9222:9222"     # P2P TCP
      - "9222:9222/udp" # P2P UDP
      - "7300:7300"     # metrics
      - "6060:6060"     # pprof
    command: [ "bash", "./op-node-entrypoint" ]
    healthcheck:
      test: ["CMD", "curl", "-sd", "{\"jsonrpc\":\"2.0\",\"id\":1,\"method\":\"optimism_version\",\"params\":[]}", "-H", "Content-Type: application/json", "http://node:9545"]
      start_period: 5s
      interval: 1m
      timeout: 5s
      retries: 3
    env_file:
      - .env
      # select your network here:
      # - .env.sepolia
      - .env.mainnet
